HINT :- THERE ARE TWO WAYS ONE LINEARLY SEARCH AND OTHER FIND THE ROW MEANS 
CONDITIONS 1. IF TARGET < FIRST ELEMENT OF ROW(MID)(0) THEN HIGH =MID-1
2.IF TARGET > LAST ELEMENT OF ROW(MID)(M(COL)-1) THEN LOW=MID+1;
3.IF TARGET>FIRST ELEMENT OF ROW(MID)(0) AND TERGET < LAST ELEMENT OF ROW(MID)(M-1)
THEN THE ELEMENT EIST IN THIS ROW
4.DO BINARY SEARCH OVER THE ROW AS WE DO IN 1D ARRAY
 static boolean binarySearch1D(int arr[], int K)
    {
        int low = 0;
        int high = N - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
 
            // if element found return true
            if (arr[mid] == K) {
                return true;
            }
 
            // if middle less than K then
            // skip the left part of the
            // array else skip the right part
            if (arr[mid] < K) {
                low = mid + 1;
            }
            else {
                high = mid - 1;
            }
        }
 
        // if not found return false
        return false;
    }
 
    // Function to search an element
    // in a matrix based on
    // Divide and conquer approach
    static boolean searchMatrix(int matrix[][], int K)
    {
        int low = 0;
        int high = M - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
 
            // if the element lies in the range
            // of this row then call
            // 1-D binary search on this row
            if (K >= matrix[mid][0]
                && K <= matrix[mid][N - 1]) {
                return binarySearch1D(matrix[mid], K);
            }
 
            // if the element is less than the
            // starting element of that row then
            // search in upper rows else search
            // in the lower rows
            if (K < matrix[mid][0]) {
                high = mid - 1;
            }
            else {
                low = mid + 1;
            }
        }
 
        // if not found
        return false;
    }

import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution {
	static boolean findTargetInMatrix(ArrayList<ArrayList<Integer>> mat, int m, int n, int target) {
		// Write your code here.
        
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                
                if(mat.get(i).get(j)==target)
                {
                    return true;
                }
            }
        }
        return false;
        
	}
}
